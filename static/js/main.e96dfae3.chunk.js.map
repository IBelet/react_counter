{"version":3,"sources":["components/Button.jsx","components/Counter.jsx","App.js","index.js"],"names":["Button","name","onClick","type","Counter","count","App","state","addOne","setState","prevState","add100","increase","reset","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACpB,4BACEC,KAAK,SACLD,QAASA,GAERD,KCLQG,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACrB,6CACaA,KCgDAC,E,4MA/CbC,MAAQ,CACNF,MAAO,G,EAGTG,OAAS,WACP,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAOK,EAAUL,MAAQ,O,EAI7BM,OAAS,WACP,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAOK,EAAUL,MAAQ,S,EAI7BO,SAAW,WACT,EAAKH,UAAS,SAACC,GACTA,EAAUL,MAAQ,IAAM,GAC1B,EAAKM,SAGP,EAAKH,a,EAITK,MAAQ,WACN,EAAKJ,SAAS,CACZJ,MAAO,K,uDAID,IACAA,EAAUS,KAAKP,MAAfF,MAER,OACE,oCACE,kBAAC,EAAD,CAASA,MAAOA,IAChB,kBAAC,EAAD,CAAQH,QAASY,KAAKN,OAAQP,KAAK,YACnC,kBAAC,EAAD,CAAQC,QAASY,KAAKH,OAAQV,KAAK,YACnC,kBAAC,EAAD,CAAQC,QAASY,KAAKF,SAAUX,KAAK,aACrC,kBAAC,EAAD,CAAQC,QAASY,KAAKD,MAAOZ,KAAK,e,GA1CxBc,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e96dfae3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ name, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ count }) => (\n  <h1>\n    {`Count: ${count}`}\n  </h1>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Button } from './components/Button';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.setState((prevState) => {\n      if (prevState.count % 5 === 0) {\n        this.add100();\n      }\n\n      this.addOne();\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      count: 0,\n    });\n  }\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <>\n        <Counter count={count} />\n        <Button onClick={this.addOne} name=\"Add one\" />\n        <Button onClick={this.add100} name=\"Add 100\" />\n        <Button onClick={this.increase} name=\"Increase\" />\n        <Button onClick={this.reset} name=\"Reset\" />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}